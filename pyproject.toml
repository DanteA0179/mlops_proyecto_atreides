[tool.poetry]
name = "energy-optimization-copilot"
version = "0.1.0"
description = "Sistema de Optimización Energética con IA para la Industria Siderúrgica"
authors = ["Team 37"]
readme = "README.md"
license = "MIT"
packages = [{include = "src"}]

[[tool.poetry.source]]
name = "pytorch_cu129"
url = "https://download.pytorch.org/whl/cu129"
priority = "explicit"

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
# Data Processing
polars = "^1.34.0"
pandas = "^2.3.3"
numpy = "^2.3.3"
pyarrow = "^21.0.0"
duckdb = "^1.4.0"

# Visualization
matplotlib = "^3.10.6"
seaborn = "^0.13.2"
plotly = "^5.19.0"

# Machine Learning - Classic
scikit-learn = "^1.7.2"
xgboost = "^3.0.5"
lightgbm = "^4.6.0"
optuna = "^4.5.0"

# Machine Learning - Foundation Models
torch = {version = "^2.8.0", source = "pytorch_cu129"}
transformers = "4.56.2"
accelerate = "^1.10.1"

# MLOps - Tracking
dvc = "^3.63.0"
mlflow = "^3.4.0"

# MLOps - Orchestration
prefect = "^3.4.22"
prefect-dask = {version = "^0.3.6", optional = true}

# Backend & API
fastapi = "^0.118.0"
pydantic = "^2.11.10"
uvicorn = {extras = ["standard"], version = "^0.37.0"}
gunicorn = "^23.0.0"

# LLM & AI
langchain = "^0.3.27"
langchain-community = "^0.3.30"

# Monitoring
evidently = "^0.7.14"

# Development Tools
pytest = "^8.4.2"
pytest-cov = "^7.0.0"
black = "^25.9.0"
ruff = "^0.13.3"
pre-commit = "^4.3.0"
jupyter = "^1.1.1"
jupyterlab = "^4.4.9"
ipykernel = "^6.30.1"

# Utils
python-dotenv = "^1.1.1"
tqdm = "^4.67.1"
click = "^8.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.2"
pytest-cov = "^7.0.0"
pytest-asyncio = "^1.2.0"
black = "^25.9.0"
ruff = "^0.13.3"
mypy = "^1.18.2"
ipython = "^9.6.0"

[tool.poetry.extras]
dask = ["prefect-dask"]

[tool.black]
line-length = 100
target-version = ['py311']

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
